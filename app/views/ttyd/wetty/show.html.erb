<!DOCTYPE html>
<html>
<head>
  <title>Terminal - <%= @sesion.laboratorio.nombre %></title>
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta charset="UTF-8">
  <%= csrf_meta_tags %>
  <%= csp_meta_tag %>
  <base href="<%= request.base_url %>" />
  
  <style>
    :root {
      --terminal-bg: #2a2e37;
      --terminal-text: #e2e8f0;
      --terminal-info: #a0aec0;
      --terminal-accent: #4299e1;
      --terminal-error: #f56565;
      --terminal-success: #48bb78;
    }
    
    [data-theme="light"] {
      --terminal-bg: #f7fafc;
      --terminal-text: #2d3748;
      --terminal-info: #718096;
      --terminal-accent: #3182ce;
      --terminal-error: #e53e3e;
      --terminal-success: #38a169;
    }
    
    html, body {
      margin: 0;
      padding: 0;
      width: 100%;
      height: 100%;
      overflow: hidden;
      font-family: system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif;
    }
    
    .terminal-container {
      display: flex;
      flex-direction: column;
      height: 100%;
      background-color: var(--terminal-bg);
      color: var(--terminal-text);
    }
    
    .terminal-header {
      background: var(--terminal-bg);
      border-bottom: 1px solid rgba(255, 255, 255, 0.1);
      padding: 8px 12px;
      display: flex;
      justify-content: space-between;
      align-items: center;
      z-index: 10;
    }
    
    .terminal-title {
      font-size: 14px;
      font-weight: 600;
      display: flex;
      align-items: center;
    }
    
    .terminal-title-icon {
      margin-right: 8px;
      width: 16px;
      height: 16px;
    }
    
    .terminal-info {
      font-size: 12px;
      color: var(--terminal-info);
      display: flex;
      align-items: center;
    }
    
    .terminal-content {
      flex: 1;
      position: relative;
      overflow: hidden;
    }
    
    iframe {
      width: 100%;
      height: 100%;
      border: none;
      background-color: #000;
    }
    
    .terminal-loader {
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: rgba(0, 0, 0, 0.7);
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      z-index: 5;
      color: var(--terminal-text);
    }
    
    .terminal-loader-spinner {
      width: 40px;
      height: 40px;
      border: 4px solid rgba(255, 255, 255, 0.1);
      border-radius: 50%;
      border-top-color: var(--terminal-accent);
      animation: spin 1s ease-in-out infinite;
      margin-bottom: 16px;
    }
    
    .terminal-error-message {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background: rgba(0, 0, 0, 0.8);
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      color: var(--terminal-text);
      text-align: center;
      z-index: 10;
      max-width: 80%;
    }
    
    .terminal-error-icon {
      color: var(--terminal-error);
      font-size: 32px;
      margin-bottom: 16px;
    }
    
    .terminal-retry-button {
      background: var(--terminal-accent);
      color: white;
      border: none;
      padding: 8px 16px;
      border-radius: 4px;
      font-weight: 600;
      cursor: pointer;
      margin-top: 16px;
      transition: background-color 0.2s;
    }
    
    .terminal-retry-button:hover {
      background-color: #2b6cb0;
    }
    
    .terminal-toolbar {
      display: flex;
      align-items: center;
      position: absolute;
      top: 10px;
      right: 10px;
      z-index: 6;
      background: rgba(42, 46, 55, 0.7);
      border-radius: 4px;
      padding: 2px;
    }
    
    .terminal-toolbar-button {
      background: none;
      border: none;
      color: var(--terminal-info);
      width: 30px;
      height: 30px;
      display: flex;
      align-items: center;
      justify-content: center;
      border-radius: 4px;
      cursor: pointer;
      transition: all 0.2s;
    }
    
    .terminal-toolbar-button:hover {
      background: rgba(255, 255, 255, 0.1);
      color: var(--terminal-text);
    }
    
    @keyframes spin {
      to { transform: rotate(360deg); }
    }
  </style>
</head>

<body>
  <div class="terminal-container">
    <div class="terminal-header">
      <div class="terminal-title">
        <svg class="terminal-title-icon" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8 9l3 3-3 3m5 0h3M5 20h14a2 2 0 002-2V6a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z" />
        </svg>
        <%= @sesion.laboratorio.nombre %> 
        <span style="margin-left: 8px; font-size: 12px; color: var(--terminal-info);">
          (<%= @sesion.laboratorio.tipo %>)
        </span>
      </div>
      <div class="terminal-info">
        <span style="margin-right: 16px;">
          <svg style="width: 12px; height: 12px; margin-right: 4px; display: inline-block; vertical-align: middle;" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
          </svg>
          <%= current_usuario.email %>
        </span>
        <span>
          <svg style="width: 12px; height: 12px; margin-right: 4px; display: inline-block; vertical-align: middle;" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10" />
          </svg>
          <%= @sesion.container_id || 'No disponible' %>
        </span>
      </div>
    </div>
    
    <div class="terminal-content">
      <iframe 
        src="<%= @ttyd_url %>" 
        allowfullscreen 
        allow="fullscreen"
        id="terminal-frame"
        title="Terminal"
        loading="eager"
        importance="high"
      ></iframe>
      
      <div class="terminal-toolbar">
        <button 
          class="terminal-toolbar-button" 
          id="refresh-button" 
          title="Refrescar terminal"
        >
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" width="16" height="16">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
          </svg>
        </button>
        <button 
          class="terminal-toolbar-button" 
          id="fullscreen-button" 
          title="Pantalla completa"
        >
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" width="16" height="16">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 8V4m0 0h4M4 4l5 5m11-1V4m0 0h-4m4 0l-5 5M4 16v4m0 0h4m-4 0l5-5m11 5v-4m0 4h-4m4 0l-5-5" />
          </svg>
        </button>
      </div>
      
      <div id="terminal-loader" class="terminal-loader">
        <div class="terminal-loader-spinner"></div>
        <div>Conectando a la terminal...</div>
      </div>
      
      <div id="terminal-error" class="terminal-error-message" style="display:none;">
        <div class="terminal-error-icon">
          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" width="32" height="32">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
          </svg>
        </div>
        <div id="error-message-text">Error de conexión con la terminal.</div>
        <button id="retry-button" class="terminal-retry-button">Reconectar</button>
      </div>
    </div>
  </div>

  <script>
    // Referencias a elementos DOM
    const iframe = document.getElementById('terminal-frame');
    const loader = document.getElementById('terminal-loader');
    const errorMessage = document.getElementById('terminal-error');
    const errorMessageText = document.getElementById('error-message-text');
    const retryButton = document.getElementById('retry-button');
    const refreshButton = document.getElementById('refresh-button');
    const fullscreenButton = document.getElementById('fullscreen-button');
    const ttydUrl = '<%= @ttyd_url %>';
    
    // Estado de la aplicación
    let connectionAttempts = 0;
    let connectionChecks = 0;
    let checkConnectionInterval;
    let connectionCheckTimeout;
    let resizeObserver;
    
    // Inicialización
    document.addEventListener('DOMContentLoaded', function() {
      setupEventListeners();
      setupResizeObserver();
      startConnectionCheck();
    });
    
    // Configuración del observador de redimensionamiento
    function setupResizeObserver() {
      const container = document.querySelector('.terminal-content');
      if (!container) return;
      
      // Crear un observador de redimensionamiento
      resizeObserver = new ResizeObserver(() => {
        adjustIframeSize();
      });
      
      // Observar el contenedor
      resizeObserver.observe(container);
      
      // Ajuste inicial
      adjustIframeSize();
      
      // También escuchar evento de redimensionamiento de ventana
      window.addEventListener('resize', adjustIframeSize);
    }
    
    // Ajustar tamaño del iframe
    function adjustIframeSize() {
      const container = document.querySelector('.terminal-content');
      if (!container || !iframe) return;
      
      // Establecer dimensiones
      iframe.style.height = `${container.offsetHeight}px`;
      iframe.style.width = `${container.offsetWidth}px`;
      
      // Forzar un refresco después de un momento
      setTimeout(() => {
        iframe.style.height = `${container.offsetHeight}px`;
        iframe.style.width = `${container.offsetWidth}px`;
      }, 100);
    }
    
    // Configuración de eventos
    function setupEventListeners() {
      // Evento para reintentar conexión
      retryButton.addEventListener('click', function() {
        retryConnection();
      });
      
      // Evento para refrescar la terminal
      refreshButton.addEventListener('click', function() {
        refreshTerminal();
      });
      
      // Evento para pantalla completa
      fullscreenButton.addEventListener('click', function() {
        toggleFullscreen();
      });
      
      // Evento de carga del iframe
      iframe.addEventListener('load', function() {
        onIframeLoad();
      });
      
      // Limpieza al salir
      window.addEventListener('beforeunload', function() {
        clearAllChecks();
      });
    }
    
    // Iniciar verificación de conexión
    function startConnectionCheck() {
      // Verificar conexión después de tiempo inicial
      connectionCheckTimeout = setTimeout(checkConnection, 5000);
      
      // Establecer intervalo para verificaciones periódicas
      checkConnectionInterval = setInterval(checkConnection, 30000);
    }
    
    // Verificar si podemos acceder al contenido del iframe 
    function checkConnection() {
      connectionChecks++;
      console.log(`Verificación de conexión ${connectionChecks}`);
      
      try {
        // Esto fallará con error CORS si el iframe no cargó correctamente desde el mismo origen
        const iframeDoc = iframe.contentDocument || iframe.contentWindow.document;
        
        // Si podemos acceder, la conexión está bien
        hideLoader();
        hideError();
        connectionAttempts = 0; // Reiniciar contador de intentos
      } catch (e) {
        // Posible error CORS o no cargado
        connectionAttempts++;
        console.warn(`Error verificando conexión (intento ${connectionAttempts}):`, e);
        
        // Después de varios intentos fallidos, mostrar error
        if (connectionAttempts >= 3) {
          showError("Error de conexión con el servidor de terminal. Verifica que el contenedor esté en ejecución.");
        }
        
        // En el primer intento fallido, intentar reconectar automáticamente
        if (connectionAttempts === 1) {
          console.log('Intentando reconexión automática...');
          refreshTerminal();
        }
      }
    }
    
    // Manejar carga del iframe
    function onIframeLoad() {
      console.log('Iframe cargado');
      
      // Damos tiempo para que la terminal se inicialice
      setTimeout(function() {
        // Verificar si realmente cargó
        checkConnection();
        
        // Ocultar loader tras tiempo razonable
        setTimeout(hideLoader, 2000);
      }, 1000);
    }
    
    // Reintentar conexión
    function retryConnection() {
      console.log('Reintentando conexión a terminal...');
      connectionAttempts = 0;
      hideError();
      showLoader();
      refreshTerminal();
    }
    
    // Refrescar terminal
    function refreshTerminal() {
      showLoader();
      // Añadimos un parámetro de tiempo para evitar caché
      iframe.src = ttydUrl.includes('?') 
        ? `${ttydUrl}&t=${Date.now()}` 
        : `${ttydUrl}?t=${Date.now()}`;
    }
    
    // Alternar pantalla completa
    function toggleFullscreen() {
      const container = document.querySelector('.terminal-container');
      
      if (!document.fullscreenElement) {
        if (container.requestFullscreen) {
          container.requestFullscreen();
        } else if (container.webkitRequestFullscreen) {
          container.webkitRequestFullscreen();
        } else if (container.msRequestFullscreen) {
          container.msRequestFullscreen();
        }
      } else {
        if (document.exitFullscreen) {
          document.exitFullscreen();
        } else if (document.webkitExitFullscreen) {
          document.webkitExitFullscreen();
        } else if (document.msExitFullscreen) {
          document.msExitFullscreen();
        }
      }
    }
    
    // Mostrar mensaje de error
    function showError(message) {
      errorMessageText.textContent = message || 'Error de conexión con la terminal.';
      errorMessage.style.display = 'block';
      hideLoader();
    }
    
    // Ocultar mensaje de error
    function hideError() {
      errorMessage.style.display = 'none';
    }
    
    // Mostrar pantalla de carga
    function showLoader() {
      loader.style.display = 'flex';
    }
    
    // Ocultar pantalla de carga
    function hideLoader() {
      loader.style.display = 'none';
    }
    
    // Limpiar todos los temporizadores al salir
    function clearAllChecks() {
      if (checkConnectionInterval) {
        clearInterval(checkConnectionInterval);
      }
      if (connectionCheckTimeout) {
        clearTimeout(connectionCheckTimeout);
      }
      if (resizeObserver) {
        resizeObserver.disconnect();
      }
      window.removeEventListener('resize', adjustIframeSize);
    }
  </script>
</body>
</html>